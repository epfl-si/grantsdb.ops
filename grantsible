#!/bin/bash

set -e -x
cd "$(cd "$(dirname "$0")"; pwd)"

help () {
    fatal <<HELP_MSG
Usage:

  $0 [ -t sometag ] [ ... ]
HELP_MSG
}

ensure_ansible () {
    if ! test -f ansible-deps-cache/.versions 2>/dev/null; then
        curl https://raw.githubusercontent.com/epfl-si/ansible.suitcase/master/install.sh | \
            SUITCASE_DIR=$PWD/ansible-deps-cache \
            SUITCASE_ANSIBLE_REQUIREMENTS=requirements.yml \
            SUITCASE_ANSIBLE_VERSION=8.0.0 \
            bash -x
    fi
    export PATH="$PWD/ansible-deps-cache/bin:$PATH"

    . ansible-deps-cache/lib.sh
}

inventories () {
  case "$inventory_mode" in
    # dev)  echo "-i inventory/dev.yml"  ;; # dev means local
    test) echo "-i inventory/new-test.yml" ;; 
    old-test) echo "-i inventory/test.yml" ;; # test means grantsdev.epfl.ch
    qual) echo "-i inventory/qual.yml" ;; # qual means grantsqualite.epfl.ch
    prod) echo "-i inventory/prod.yml" ;; # prod means grantsdb.epfl.ch
    test-and-qual) echo "-i inventory/test.yml -i inventory/qual.yml" ;;
  esac
}

ensure_ansible
[ "$1" == "--help" ] && help

declare -a ansible_args
ansible_args=(-e "grantsible_dir=$OLDPWD" -e "grantsible_user=$(whoami)")

inventory_mode="test"

while [ "$#" -gt 0 ]; do
  case "$1" in
    --help)
      help ;;
    --qual)
      inventory_mode="qual"
      shift ;;
    --prod)
      inventory_mode="prod"
      shift ;;
    --test-and-qual)
      inventory_mode="test-and-qual"
      shift ;;
    *)
      ansible_args+=("$1")
      shift ;;
  esac
done

ansible-playbook $(inventories) playbook.yml "${ansible_args[@]}"
